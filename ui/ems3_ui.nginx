server {
    listen 80;
    listen [::]:80;
    
    # Change this to your domain name or IP address
    server_name localhost;
    
    # Root directory where the built React app is located
    root /var/www/ems3/ui;
    index index.html;
    
    # Access and error logs
    access_log /var/log/nginx/ems3_ui_access.log combined;
    error_log /var/log/nginx/ems3_ui_error.log warn;
    
    # Charset
    charset utf-8;
    
    # Enhanced compression settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types 
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        application/rss+xml
        application/atom+xml
        application/xhtml+xml
        application/vnd.ms-fontobject
        font/truetype
        font/opentype
        font/woff
        font/woff2
        image/svg+xml
        image/x-icon;
    gzip_disable "msie6";
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml image/svg+xml;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Content Security Policy (adjust as needed for your app)
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;
    
    # Performance optimizations
    tcp_nopush on;
    tcp_nodelay on;
    sendfile on;
    sendfile_max_chunk 512k;
    
    # Client settings
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    
    # Keepalive connections
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Cache static assets aggressively
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Enable CORS for assets if needed
        add_header Access-Control-Allow-Origin "*";
        
        # Security headers (inherited from server block but can be overridden)
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # Cache fonts with long expiry
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # CORS for fonts
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
    }
    
    # Cache JSON files (but with shorter expiry)
    location ~* \.json$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        
        # Don't cache service worker or manifest
        location ~* (service-worker\.js|manifest\.json)$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }
    }
    
    # Don't cache service worker
    location = /sw.js {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }
    
    # Don't cache HTML files to ensure users get updates
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }
    
    # Main location block - serve React app with fallback to index.html for SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # Don't cache the root index.html
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }
    
    # Optional: Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
