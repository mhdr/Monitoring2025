@API_HostAddress = http://localhost:5030
# HTTP development endpoint

###
# EMS API Testing - HTTP Configuration
# 
# This API now operates in HTTP-only mode for simplified development
#
###





### Register a new user - HTTP
POST {{API_HostAddress}}/api/auth/register
Content-Type: application/json

{
  "firstName": "John",
  "lastName": "Doe",
  "firstNameFa": "جان",
  "lastNameFa": "دو",
  "userName": "johndoe",
  "password": "123",
  "confirmPassword": "123"
}

###

### Register a new user - HTTPS
POST {{API_HostAddress}}/api/auth/register
Content-Type: application/json

{
  "firstName": "Jane",
  "lastName": "Smith",
  "firstNameFa": "جین",
  "lastNameFa": "اسمیت",
  "userName": "janesmith",
  "password": "456",
  "confirmPassword": "456"
}

###

### Login with registered user - HTTP
# @name loginUserHTTP
# 
# TROUBLESHOOTING SSL ISSUES:
# If you get "PKIX path building failed" or SSL handshake exceptions:
#
# METHOD 1: Use HTTPS directly (recommended)
# Use the HTTPS endpoint below instead of HTTP
#
# METHOD 2: Disable HTTPS redirection temporarily
# Set "Development:DisableHttpsRedirection": true in appsettings.Development.json
# Then restart the API server
#
# METHOD 3: Configure VS Code REST Client to trust self-signed certificates
# Add to VS Code settings.json:
# {
#   "rest-client.certificates": {
#     "localhost:7136": {
#       "cert": "./certificates/api-cert.pem",
#       "key": "./certificates/api-key.pem"
#     }
#   }
# }
#
# METHOD 4: Disable SSL verification (UNSAFE - for testing only)
# Add to VS Code settings.json: "rest-client.rejectUnauthorized": false
#
POST {{API_HostAddress}}/api/auth/login
Content-Type: application/json

{
  "userName": "mahmood2",
  "password": "12345",
  "rememberMe": true
}

###

### Login with registered user - HTTPS
# @name loginUserHTTPS
POST {{API_HostAddress}}/api/auth/login
Content-Type: application/json

{
  "userName": "mahmood2",
  "password": "12345",
  "rememberMe": true
}

###

### Extract tokens from login responses
@authTokenHTTP = {{loginUserHTTP.response.body.accessToken}}
@authTokenHTTPS = {{loginUserHTTPS.response.body.accessToken}}



### Get current user info using JWT token - HTTP
GET {{API_HostAddress}}/api/auth/me
Accept: application/json
Authorization: Bearer {{authTokenHTTP}}

###

### Get current user info using JWT token - HTTPS
GET {{API_HostAddress}}/api/auth/me
Accept: application/json
Authorization: Bearer {{authTokenHTTPS}}

###

### Test refresh token - HTTP (use actual tokens from login response)
POST {{API_HostAddress}}/api/auth/refresh-token
Content-Type: application/json

{
  "accessToken": "{{authTokenHTTP}}",
  "refreshToken": "replace_with_actual_refresh_token_from_login_response"
}

###

### Test refresh token - HTTPS (use actual tokens from login response)
POST {{API_HostAddress}}/api/auth/refresh-token
Content-Type: application/json

{
  "accessToken": "{{authTokenHTTPS}}",
  "refreshToken": "replace_with_actual_refresh_token_from_login_response"
}

###

### Logout - HTTP (requires auth)
POST {{API_HostAddress}}/api/auth/logout
Authorization: Bearer {{authTokenHTTP}}

###

### Logout - HTTPS (requires auth)
POST {{API_HostAddress}}/api/auth/logout
Authorization: Bearer {{authTokenHTTPS}}

###

### Test registration with duplicate username - should return error - HTTP
POST {{API_HostAddress}}/api/auth/register
Content-Type: application/json

{
  "firstName": "Jane",
  "lastName": "Smith",
  "firstNameFa": "جین",
  "lastNameFa": "اسمیت",
  "userName": "johndoe",
  "password": "456",
  "confirmPassword": "456"
}

###

### Test login with invalid credentials - should return 401 - HTTP
POST {{API_HostAddress}}/api/auth/login
Content-Type: application/json

{
  "userName": "johndoe",
  "password": "WrongPassword",
  "rememberMe": false
}

###

### Test login with invalid credentials - should return 401 - HTTPS
POST {{API_HostAddress}}/api/auth/login
Content-Type: application/json

{
  "userName": "janesmith",
  "password": "WrongPassword",
  "rememberMe": false
}

###

### Update current user information - HTTP
PUT {{API_HostAddress}}/api/auth/update-user
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "firstName": "John Updated",
  "lastName": "Doe Updated",
  "firstNameFa": "جان بروزرسانی شده",
  "lastNameFa": "دو بروزرسانی شده"
}

###

### Update current user information - HTTPS
PUT {{API_HostAddress}}/api/auth/update-user
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "firstName": "Jane Updated",
  "lastName": "Smith Updated",
  "firstNameFa": "جین بروزرسانی شده",
  "lastNameFa": "اسمیت بروزرسانی شده"
}

###

### Update another user's information (Admin only - will return 403 for regular users) - HTTP
PUT {{API_HostAddress}}/api/auth/update-user/user_id_here
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "firstName": "Another User Updated",
  "lastName": "LastName Updated"
}

###

### Disable a user (Admin functionality) - HTTP
POST {{API_HostAddress}}/api/auth/disable-user
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "userId": "user_id_to_disable_here",
  "disable": true,
  "reason": "User violated terms of service"
}

###

### Enable a user (Admin functionality) - HTTP
POST {{API_HostAddress}}/api/auth/disable-user
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "userId": "user_id_to_enable_here",
  "disable": false,
  "reason": "User issue has been resolved"
}

###

### Change current user's password - HTTP
POST {{API_HostAddress}}/api/auth/change-password
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "currentPassword": "12345",
  "newPassword": "newPassword123"
}

###

### Change current user's password - HTTPS
POST {{API_HostAddress}}/api/auth/change-password
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "currentPassword": "456",
  "newPassword": "newPassword456"
}

###

### Reset a user's password to default (Admin functionality) - HTTP
POST {{API_HostAddress}}/api/auth/reset-password
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "userName": "johndoe"
}

###

### Reset a user's password to default (Admin functionality) - HTTPS
POST {{API_HostAddress}}/api/auth/reset-password
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "userName": "janesmith"
}

###

#################################################################################
# MONITORING CONTROLLER - GROUPS ENDPOINTS
#################################################################################

### Get groups accessible to current user - HTTP
POST {{API_HostAddress}}/api/monitoring/Groups
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

###

### Get groups accessible to current user - HTTPS
POST {{API_HostAddress}}/api/monitoring/Groups
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

###

### Add new group - HTTP
POST {{API_HostAddress}}/api/monitoring/AddGroup
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "name": "Production Servers",
  "nameFa": "سرورهای تولید",
  "parentId": null
}

###

### Add new group - HTTPS
POST {{API_HostAddress}}/api/monitoring/AddGroup
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "name": "Development Servers",
  "nameFa": "سرورهای توسعه",
  "parentId": null
}

###

### Add new sub-group - HTTP
POST {{API_HostAddress}}/api/monitoring/AddGroup
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "name": "Web Servers",
  "nameFa": "سرورهای وب",
  "parentId": "replace_with_actual_parent_group_id"
}

###

### Add new sub-group - HTTPS
POST {{API_HostAddress}}/api/monitoring/AddGroup
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "name": "Database Servers",
  "nameFa": "سرورهای پایگاه داده",
  "parentId": "replace_with_actual_parent_group_id"
}

###

### Add group without Farsi name - HTTP
POST {{API_HostAddress}}/api/monitoring/AddGroup
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "name": "Building A - HVAC System"
}

###

### Edit existing group - HTTP
POST {{API_HostAddress}}/api/monitoring/EditGroup
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "id": "replace_with_actual_group_id",
  "name": "Updated Group Name"
}

###

### Edit existing group - HTTPS
POST {{API_HostAddress}}/api/monitoring/EditGroup
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "id": "replace_with_actual_group_id",
  "name": "Updated Group Name HTTPS"
}

###

### Delete group - HTTP
POST {{API_HostAddress}}/api/monitoring/DeleteGroup
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "id": "replace_with_actual_group_id"
}

###

### Delete group - HTTPS
POST {{API_HostAddress}}/api/monitoring/DeleteGroup
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "id": "replace_with_actual_group_id"
}

###

#################################################################################
# MONITORING CONTROLLER - ITEM ENDPOINTS
#################################################################################

### Get single item by ID - HTTP
POST {{API_HostAddress}}/api/monitoring/GetItem
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "itemId": "550e8400-e29b-41d4-a716-446655440000"
}

###

### Get single item by ID - HTTPS
POST {{API_HostAddress}}/api/monitoring/GetItem
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "itemId": "550e8400-e29b-41d4-a716-446655440000"
}

###

### Move Point to Different Group - HTTP
POST {{API_HostAddress}}/api/monitoring/MovePoint
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "pointId": "550e8400-e29b-41d4-a716-446655440000",
  "parentId": "550e8400-e29b-41d4-a716-446655440001"
}

###

### Move Point to Different Group - HTTPS
POST {{API_HostAddress}}/api/monitoring/MovePoint
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "pointId": "550e8400-e29b-41d4-a716-446655440000",
  "parentId": "550e8400-e29b-41d4-a716-446655440001"
}

###

### Get Alarms (all items) - HTTP
POST {{API_HostAddress}}/api/monitoring/alarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "itemIds": []
}

###

### Get Alarms (all items) - HTTPS
POST {{API_HostAddress}}/api/monitoring/alarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "itemIds": []
}

###

### Get Alarms (specific items) - HTTP
POST {{API_HostAddress}}/api/monitoring/alarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "itemIds": ["550e8400-e29b-41d4-a716-446655440001", "550e8400-e29b-41d4-a716-446655440002"]
}

###

### Get Alarms (specific items) - HTTPS
# Response includes Message (English) and MessageFa (Farsi) properties
POST {{API_HostAddress}}/api/monitoring/alarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "itemIds": ["550e8400-e29b-41d4-a716-446655440001"]
}

###

### Get Active Alarms (all items) - HTTP
POST {{API_HostAddress}}/api/monitoring/activealarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "itemIds": []
}

###

### Get Active Alarms (all items) - HTTPS
POST {{API_HostAddress}}/api/monitoring/activealarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "itemIds": []
}

###

### Get Active Alarms (specific items) - HTTP
POST {{API_HostAddress}}/api/monitoring/activealarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "itemIds": ["3fa85f64-5717-4562-b3fc-2c963f66afa6", "4fa85f64-5717-4562-b3fc-2c963f66afa7"]
}

###

### Get Active Alarms (specific items) - HTTPS
POST {{API_HostAddress}}/api/monitoring/activealarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "itemIds": ["3fa85f64-5717-4562-b3fc-2c963f66afa6"]
}

###

### Get Active Alarms (null itemIds - should retrieve all) - HTTP
POST {{API_HostAddress}}/api/monitoring/activealarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
}

###

### Get Active Alarms (unauthorized - should return 401)
POST {{API_HostAddress}}/api/monitoring/activealarms
Content-Type: application/json

{
  "itemIds": []
}

###

### Get Alarm History (all items, last 24 hours) - HTTP
POST {{API_HostAddress}}/api/monitoring/historyalarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "startDate": 1697587200,
  "endDate": 1697673600,
  "itemIds": []
}

###

### Get Alarm History (all items, last 24 hours) - HTTPS
POST {{API_HostAddress}}/api/monitoring/historyalarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "startDate": 1697587200,
  "endDate": 1697673600,
  "itemIds": []
}

###

### Get Alarm History (specific items) - HTTP
POST {{API_HostAddress}}/api/monitoring/historyalarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "startDate": 1697587200,
  "endDate": 1697673600,
  "itemIds": ["550e8400-e29b-41d4-a716-446655440001", "550e8400-e29b-41d4-a716-446655440002"]
}

###

### Get Alarm History (specific items) - HTTPS
POST {{API_HostAddress}}/api/monitoring/historyalarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTPS}}

{
  "startDate": 1697587200,
  "endDate": 1697673600,
  "itemIds": ["550e8400-e29b-41d4-a716-446655440001"]
}

###

### Get Alarm History (invalid date range - should return 400)
POST {{API_HostAddress}}/api/monitoring/historyalarms
Content-Type: application/json
Authorization: Bearer {{authTokenHTTP}}

{
  "startDate": 1697673600,
  "endDate": 1697587200,
  "itemIds": []
}

###

### Get Alarm History (unauthorized - should return 401)
POST {{API_HostAddress}}/api/monitoring/historyalarms
Content-Type: application/json

{
  "startDate": 1697587200,
  "endDate": 1697673600,
  "itemIds": []
}

###

### ========================================
### Audit Log Endpoints
### ========================================

### Get Audit Logs - All Items (Last 7 Days)
POST {{API_HostAddress}}/api/monitoring/auditlog
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "startDate": 1728950400,
  "endDate": 1729555200,
  "itemId": null
}

###

### Get Audit Logs - Specific Item
POST {{API_HostAddress}}/api/monitoring/auditlog
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "startDate": 1728950400,
  "endDate": 1729555200,
  "itemId": "550e8400-e29b-41d4-a716-446655440001"
}

###

### Get Audit Logs - Last 24 Hours (All Items)
POST {{API_HostAddress}}/api/monitoring/auditlog
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "startDate": 1729468800,
  "endDate": 1729555200
}

###

### Get Audit Logs - Invalid Date Range (should return 400)
POST {{API_HostAddress}}/api/monitoring/auditlog
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "startDate": 1729555200,
  "endDate": 1728950400
}

###

### Get Audit Logs - Invalid ItemId Format (should return 400)
POST {{API_HostAddress}}/api/monitoring/auditlog
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "startDate": 1728950400,
  "endDate": 1729555200,
  "itemId": "invalid-guid-format"
}

###

### Get Audit Logs - Negative Timestamps (should return 400)
POST {{API_HostAddress}}/api/monitoring/auditlog
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "startDate": -1,
  "endDate": 1729555200
}

###

### Get Audit Logs - Unauthorized (should return 401)
POST {{API_HostAddress}}/api/monitoring/auditlog
Content-Type: application/json

{
  "startDate": 1728950400,
  "endDate": 1729555200
}

###

### ========================================
### SignalR Hub Documentation
### ========================================

### View SignalR Hubs in Swagger UI
# SignalR hubs are now documented in Swagger UI with full method signatures
# 
# To view SignalR hub documentation:
# 1. Start the API: dotnet run
# 2. Navigate to: http://localhost:5030/swagger
# 3. Look for the "SignalR - Monitoring Hub" tag
# 4. Expand to see hub methods with parameters and descriptions
# 
# Note: SignalR hubs use WebSocket connections, not HTTP requests,
# so you cannot invoke them directly from Swagger UI. Use the Swagger
# documentation to understand the API, then connect via SignalR client.
#
# For implementation details, see: SIGNALR-SWAGGER-IMPLEMENTATION.md

###

### Get SignalR Hub Information - HTTP (No Auth Required)
# Returns complete SignalR hub documentation including:
# - Hub name and endpoint URL
# - Server methods (callable from client)
# - Client methods (invoked by server)
# - Authentication requirements
# - Connection examples for JavaScript, C#, and Python
GET {{API_HostAddress}}/api/monitoring/SignalRHubInfo

###

### Get SignalR Hub Information - With detailed response
GET {{API_HostAddress}}/api/monitoring/SignalRHubInfo
Accept: application/json

###

# SignalR Hub Connection Information:
# 
# Hub URL: http://localhost:5030/monitoringhub
# Authentication: JWT Bearer token required
# 
# Server Methods (callable from client):
# - SubscribeToActiveAlarms() - Subscribe to receive real-time active alarm updates
# 
# Client Methods (invoked by server):
# - ReceiveActiveAlarmsUpdate(int activeAlarmsCount) - Receives active alarm count updates
# 
# JavaScript Connection Example:
# import * as signalR from '@microsoft/signalr';
# const connection = new signalR.HubConnectionBuilder()
#     .withUrl('http://localhost:5030/monitoringhub', {
#         accessTokenFactory: () => localStorage.getItem('jwt_token')
#     })
#     .withAutomaticReconnect()
#     .build();
# 
# connection.on('ReceiveActiveAlarmsUpdate', (count) => {
#     console.log(`Active alarms: ${count}`);
# });
# 
# await connection.start();
# await connection.invoke('SubscribeToActiveAlarms');

###

### Write or Add Value to Monitoring Item
POST {{API_HostAddress}}/api/monitoring/WriteOrAddValue
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "itemId": "550e8400-e29b-41d4-a716-446655440000",
  "value": "25.7",
  "time": 1697587200,
  "duration": 60
}

###

### Write or Add Value to Monitoring Item (without timestamp and duration - uses current time and no duration limit)
POST {{API_HostAddress}}/api/monitoring/WriteOrAddValue
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "itemId": "550e8400-e29b-41d4-a716-446655440000",
  "value": "42.3"
}

###

### Write or Add Value - Error Case (missing required fields)
POST {{API_HostAddress}}/api/monitoring/WriteOrAddValue
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "itemId": "00000000-0000-0000-0000-000000000000",
  "value": ""
}

###

### Write Value Directly to Controller
POST {{API_HostAddress}}/api/monitoring/WriteValue
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "itemId": "550e8400-e29b-41d4-a716-446655440000",
  "value": "75.5",
  "time": 1697587200,
  "duration": 120
}

###

### Write Value to Controller (without timestamp and duration)
POST {{API_HostAddress}}/api/monitoring/WriteValue
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "itemId": "550e8400-e29b-41d4-a716-446655440000",
  "value": "80.0"
}

###
### Edit Monitoring Item - Complete Configuration
POST {{API_HostAddress}}/api/monitoring/EditItem
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "id": "550e8400-e29b-41d4-a716-446655440000",
  "itemType": 3,
  "itemName": "Temperature Sensor 1 - Updated",
  "pointNumber": 101,
  "shouldScale": 1,
  "normMin": 0,
  "normMax": 100,
  "scaleMin": -50,
  "scaleMax": 150,
  "saveInterval": 60,
  "saveHistoricalInterval": 300,
  "calculationMethod": 1,
  "numberOfSamples": 10,
  "onText": "Running",
  "offText": "Stopped",
  "unit": "°C",
  "isDisabled": false
}

###

### Edit Monitoring Item - Digital Input Example
POST {{API_HostAddress}}/api/monitoring/EditItem
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "id": "550e8400-e29b-41d4-a716-446655440001",
  "itemType": 1,
  "itemName": "Motor Status Switch",
  "pointNumber": 205,
  "shouldScale": 2,
  "normMin": 0,
  "normMax": 1,
  "scaleMin": 0,
  "scaleMax": 1,
  "saveInterval": 30,
  "saveHistoricalInterval": 120,
  "calculationMethod": 0,
  "numberOfSamples": 1,
  "onText": "Motor Running",
  "offText": "Motor Stopped",
  "unit": "",
  "isDisabled": false
}

###

### Edit Monitoring Item - Error Case (Duplicate Point Number)
POST {{API_HostAddress}}/api/monitoring/EditItem
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "id": "550e8400-e29b-41d4-a716-446655440000",
  "itemType": 3,
  "itemName": "Test Item",
  "pointNumber": 999999,
  "shouldScale": 1,
  "normMin": 0,
  "normMax": 100,
  "scaleMin": 0,
  "scaleMax": 100,
  "saveInterval": 60,
  "saveHistoricalInterval": 300,
  "calculationMethod": 1,
  "numberOfSamples": 10,
  "onText": "",
  "offText": "",
  "unit": "",
  "isDisabled": false
}

###

### Edit Monitoring Item - Error Case (Item Not Found)
POST {{API_HostAddress}}/api/monitoring/EditItem
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "id": "00000000-0000-0000-0000-000000000000",
  "itemType": 3,
  "itemName": "Non-existent Item",
  "pointNumber": 100,
  "shouldScale": 1,
  "normMin": 0,
  "normMax": 100,
  "scaleMin": 0,
  "scaleMax": 100,
  "saveInterval": 60,
  "saveHistoricalInterval": 300,
  "calculationMethod": 1,
  "numberOfSamples": 10,
  "onText": "",
  "offText": "",
  "unit": "",
  "isDisabled": false
}

###
